# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

directive @extends on INTERFACE | OBJECT

directive @external on FIELD_DEFINITION | OBJECT

directive @key(fields: String!) on INTERFACE | OBJECT

directive @provides(fields: String!) on FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

type Address {
  city: String!
  country: String!
  postal: String!
  street: String!
}

input AddressInput {
  city: String!
  country: String!
  postal: String!
  street: String!
}

"""User's billing information"""
type Billing {
  DIC: String!
  IBAN: String
  ICDPH: String!
  ICO: String!
  SWIFT: String
  address: Address!
  id: ObjectId
  name: String!
}

input BillingInput {
  DIC: String!
  IBAN: String
  ICDPH: String!
  ICO: String!
  SWIFT: String
  address: AddressInput!
  name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  deleteUser(id: ObjectId!): Boolean!
  login(email: String!, password: String!): User!
  logout: Boolean!
  passwordReset(data: PasswordInput!): User!
  register(data: RegisterInput!): User!
  updateBilling(data: BillingInput!): User!
  updateUser(data: UserInput!, id: ObjectId!): User!
}

"""Mongo object id scalar type"""
scalar ObjectId

type PageInfo {
  endCursor: ObjectId!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: ObjectId!
}

input PasswordInput {
  password: String!
}

type Query {
  forgotPassword(email: String!): String!
  me: User!
  user(id: ObjectId!): User!
  users(after: String, before: String, first: Int = 20, last: Int = 20): UserConnection!
}

"""New user input data"""
input RegisterInput {
  email: String!
  name: String!
  organisation: String!
  password: String!
  telephone: String!
}

"""User role inside the FLAWIS system"""
enum Role {
  Admin
  Basic
}

"""The user model entity"""
type User {
  active: Boolean!
  billings: [Billing!]!
  createdAt: DateTime!
  email: String!
  id: ObjectId!
  name: String!
  organisation: String!
  role: Role!
  telephone: String
  updatedAt: DateTime!
}

"""UserConnection type enabling cursor based pagination"""
type UserConnection {
  edges: [UserEdge]!
  pageInfo: PageInfo!
}

type UserEdge {
  cursor: ObjectId!
  node: User!
}

"""User update input data"""
input UserInput {
  email: String!
  name: String!
  organisation: String!
  role: String
  telephone: String!
}
